parserOptions:
  sourceType: script
env:
  es2022: true
  browser: true
extends:
  - 'eslint:recommended'
overrides:
  - files: '**/*.js'
    env:
      node: true
  - files: ['**/*.ts', '**/*.tsx']
    parser: '@typescript-eslint/parser'
    parserOptions:
      sourceType: module
      project: ['tsconfig.json']
    plugins: ['react', 'react-hooks', '@typescript-eslint']
    settings:
      react:
        version: detect
    extends:
      - 'plugin:react/recommended'
      - 'plugin:react/jsx-runtime'
      - 'plugin:react-hooks/recommended'
      - 'plugin:@typescript-eslint/strict'
      - 'plugin:@typescript-eslint/recommended'
      - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
    rules:
      '@typescript-eslint/consistent-indexed-object-style':
        [error, index-signature]

      # FIXME: remove below rules
      'react/jsx-key': off
      'react/no-string-refs': off
      '@typescript-eslint/no-var-requires': off

      # FIXME: blocked by improper type checking should be fixed
      # after we switch TSC in strict mode
      '@typescript-eslint/no-explicit-any': off
      '@typescript-eslint/dot-notation': off
      '@typescript-eslint/no-dynamic-delete': off
      '@typescript-eslint/restrict-plus-operands': off
      '@typescript-eslint/no-unsafe-call': off
      '@typescript-eslint/no-unsafe-return': off
      '@typescript-eslint/no-unsafe-argument': off
      '@typescript-eslint/no-unsafe-assignment': off
      '@typescript-eslint/no-unsafe-member-access': off
      '@typescript-eslint/no-unnecessary-condition': off
      '@typescript-eslint/restrict-template-expressions': off
